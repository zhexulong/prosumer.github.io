{"version":3,"file":"component---src-pages-index-js-19bfd45debdb9369a3a6.js","mappings":"6JAoCA,UAhCoB,IAAwB,UAAvB,KAAEA,EAAI,SAAEC,GAAU,EACrC,MAAMC,GAAkC,QAAtB,EAAAF,EAAKG,KAAKC,oBAAY,aAAtB,EAAwBC,QAAU,QAEpD,IAAIC,EAAQN,EAAKO,kBAAkBC,MAC/BC,EAAa,GAgBjB,OAdAH,EAAMI,SAASC,IACb,MAAMC,EAAUH,EAAWI,MACxBC,GAAaA,EAAST,QAAUM,EAAKI,YAAYC,OAE/CJ,EAMHA,EAAQK,MAAQL,EAAQK,MAAQ,EALhCR,EAAWS,KAAK,CACdb,MAAOM,EAAKI,YAAYC,KACxBC,MAAO,GAIX,IAIA,gBAAC,IAAM,CAAChB,SAAUA,EAAUI,MAAOH,GAChCO,EAAWU,KAAKL,GAEb,uBAAKM,IAAKN,EAAST,MAAOgB,UAAU,YACjCP,EAAST,MAAM,IAAES,EAASG,MAAM,OAIhC,C,8HC+Bb,UAxDkB,IAAwB,UAAvB,KAAEjB,EAAI,SAAEC,GAAU,EACnC,MAAMC,GAAkC,QAAtB,EAAAF,EAAKG,KAAKC,oBAAY,aAAtB,EAAwBC,QAAU,QAC9CC,EAAQN,EAAKO,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMgB,OAEN,gBAAC,IAAM,CAACrB,SAAUA,EAAUI,MAAOH,GACjC,gBAAC,IAAG,MACJ,yBAAG,8JAUP,gBAAC,IAAM,CAACD,SAAUA,EAAUI,MAAOH,GACjC,gBAAC,IAAG,MACJ,sBAAIqB,MAAO,CAAEC,UAAY,SACtBlB,EAAMa,KAAIR,IACT,MAAMN,EAAQM,EAAKI,YAAYV,OAASM,EAAKc,OAAOC,KAEpD,OACE,sBAAIN,IAAKT,EAAKc,OAAOC,MACnB,2BACEL,UAAU,iBACVM,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAAC,KAAI,CAACC,GAAInB,EAAKc,OAAOC,KAAMK,SAAS,OACnC,wBAAMA,SAAS,YAAY1B,KAG/B,6BAAQM,EAAKI,YAAYiB,OAE3B,+BACE,qBACEC,wBAAyB,CACvBC,OAAQvB,EAAKI,YAAYoB,aAAexB,EAAKyB,SAE/CL,SAAS,kBAIZ,KAIJ,EAWN,MAAMM,EAAO,IAAM,gBAAC,IAAG,CAAChC,MAAM,a","sources":["webpack://gatsby-starter-blog/./src/pages/categories.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["import { graphql } from \"gatsby\";\r\nimport * as React from \"react\";\r\nimport Layout from \"../components/layout\";\r\n\r\nconst Categories =  ({ data, location }) => {\r\n  const siteTitle = data.site.siteMetadata?.title || `Title`;\r\n  // 拿到所有的文章数据\r\n  let posts = data.allMarkdownRemark.nodes;\r\n  let categories = [];\r\n  // 计算各分类文章的数量\r\n  posts.forEach((post) => {\r\n    const current = categories.find(\r\n      (category) => category.title === post.frontmatter.type\r\n    );\r\n    if (!current) {\r\n      categories.push({\r\n        title: post.frontmatter.type,\r\n        count: 1,\r\n      });\r\n    } else {\r\n      current.count = current.count + 1;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      {categories.map((category) => {\r\n        return (\r\n          <div key={category.title} className=\"category\">\r\n            {category.title}（{category.count}）\r\n          </div>\r\n        );\r\n      })}\r\n    </Layout>\r\n  );\r\n};\r\nexport default Categories;\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\r\n      nodes {\r\n        excerpt\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          tag\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport Categories from \"./categories\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Bio />\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <Seo title=\"All posts\" />\n\nexport const pageQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"names":["data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","categories","forEach","post","current","find","category","frontmatter","type","count","push","map","key","className","length","style","listStyle","fields","slug","itemScope","itemType","Link","to","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt","Head"],"sourceRoot":""}