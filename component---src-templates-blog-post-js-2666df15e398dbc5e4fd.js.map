{"version":3,"file":"component---src-templates-blog-post-js-2666df15e398dbc5e4fd.js","mappings":"4PA6BA,MA1BiB,KACb,MAAMA,GAAcC,EAAAA,EAAAA,QAAO,MAsB3B,OArBAC,EAAAA,EAAAA,YAAU,KACN,MAAMC,EAASC,SAASC,cAAc,UACtCF,EAAOG,IAAM,gCACbH,EAAOI,aAAa,OAAQ,2BAC5BJ,EAAOI,aAAa,aAAc,YAClCJ,EAAOI,aAAa,QAAS,MAC7BJ,EAAOI,aAAa,QAAS,gBAC7BJ,EAAOI,aAAa,cAAe,aACnCJ,EAAOK,OAAQ,EAEf,MAAMC,EAAUT,EAAYS,QAK5B,OAJIA,GACAA,EAAQC,YAAYP,GAGjB,KACCM,IACAA,EAAQE,UAAY,GACxB,CACH,GACF,IACI,uBAAKC,IAAKZ,GAAe,EClBpC,MAyDaa,EAAO,IAAwC,IAArCC,MAAQC,eAAgBC,IAAQ,EACrD,OACE,gBAAC,IAAG,CACFC,MAAOD,EAAKE,YAAYD,MACxBE,YAAaH,EAAKE,YAAYC,aAAeH,EAAKI,SAClD,EAIN,MAlEyB,IAGnB,UAFJN,MAAM,SAAEO,EAAQ,KAAEC,EAAI,KAAEC,EAAMR,eAAgBC,GAAM,SACpDQ,GACD,EACC,MAAMC,GAA6B,QAAjB,EAAAF,EAAKG,oBAAY,aAAjB,EAAmBT,QAAU,QAE/C,OACE,gBAAC,IAAM,CAACO,SAAUA,EAAUP,MAAOQ,GACjC,2BACEE,UAAU,YACVC,WAAS,EACTC,SAAS,6BAET,8BACE,sBAAIC,SAAS,YAAYd,EAAKE,YAAYD,OAC1C,yBAAID,EAAKE,YAAYa,OAEvB,2BACEC,wBAAyB,CAAEC,OAAQjB,EAAKkB,MACxCJ,SAAS,gBAEX,2BACA,8BACE,gBAAC,IAAG,QAGR,uBAAKH,UAAU,iBACb,sBACEQ,MAAO,CACLC,QAAU,OACVC,SAAW,OACXC,eAAiB,gBACjBC,UAAY,OACZC,QAAS,IAGX,0BACGnB,GACC,gBAAC,EAAAoB,KAAI,CAACC,GAAIrB,EAASsB,OAAOC,KAAMC,IAAI,QAAO,KACtCxB,EAASH,YAAYD,QAI9B,0BACGK,GACC,gBAAC,EAAAmB,KAAI,CAACC,GAAIpB,EAAKqB,OAAOC,KAAMC,IAAI,QAC7BvB,EAAKJ,YAAYD,MAAM,SAMhC,gBAAC,EAAQ,MACJ,C","sources":["webpack://gatsby-starter-blog/./src/components/Comments.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["\r\nimport React, { useEffect, useRef } from 'react';\r\n\r\nconst Comments = () => {\r\n    const commentsRef = useRef(null);\r\n    useEffect(() => {\r\n        const script = document.createElement('script');\r\n        script.src = 'https://utteranc.es/client.js';\r\n        script.setAttribute('repo', 'zhexulong/blog-comments');\r\n        script.setAttribute('issue-term', 'pathname');\r\n        script.setAttribute('label', 'üí¨');\r\n        script.setAttribute('theme', 'github-light');\r\n        script.setAttribute('crossorigin', 'anonymous');\r\n        script.async = true;\r\n\r\n        const current = commentsRef.current;\r\n        if (current) {\r\n            current.appendChild(script);\r\n        }\r\n\r\n        return () => {\r\n            if (current) {\r\n                current.innerHTML = '';\r\n            }\r\n        };\r\n    }, []);\r\n    return <div ref={commentsRef} />;\r\n};\r\n\r\nexport default Comments;\r\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport Comments from \"../components/Comments\";\n\nconst BlogPostTemplate = ({\n  data: { previous, next, site, markdownRemark: post },\n  location,\n}) => {\n  const siteTitle = site.siteMetadata?.title || `Title`\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ‚Üê {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} ‚Üí\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n        <Comments/>\n    </Layout>\n  )\n}\n\nexport const Head = ({ data: { markdownRemark: post } }) => {\n  return (\n    <Seo\n      title={post.frontmatter.title}\n      description={post.frontmatter.description || post.excerpt}\n    />\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["commentsRef","useRef","useEffect","script","document","createElement","src","setAttribute","async","current","appendChild","innerHTML","ref","Head","data","markdownRemark","post","title","frontmatter","description","excerpt","previous","next","site","location","siteTitle","siteMetadata","className","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel"],"sourceRoot":""}